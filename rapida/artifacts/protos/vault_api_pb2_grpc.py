# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import rapida.artifacts.protos.vault_api_pb2 as vault__api__pb2

GRPC_GENERATED_VERSION = '1.72.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in vault_api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VaultServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProviderCredential = channel.unary_unary(
                '/vault_api.VaultService/CreateProviderCredential',
                request_serializer=vault__api__pb2.CreateProviderCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.CreateProviderCredentialResponse.FromString,
                _registered_method=True)
        self.CreateToolCredential = channel.unary_unary(
                '/vault_api.VaultService/CreateToolCredential',
                request_serializer=vault__api__pb2.CreateToolCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.CreateToolCredentialResponse.FromString,
                _registered_method=True)
        self.DeleteProviderCredential = channel.unary_unary(
                '/vault_api.VaultService/DeleteProviderCredential',
                request_serializer=vault__api__pb2.DeleteProviderCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.DeleteProviderCredentialResponse.FromString,
                _registered_method=True)
        self.GetAllOrganizationCredential = channel.unary_unary(
                '/vault_api.VaultService/GetAllOrganizationCredential',
                request_serializer=vault__api__pb2.GetAllOrganizationCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.GetAllOrganizationCredentialResponse.FromString,
                _registered_method=True)
        self.GetProviderCredential = channel.unary_unary(
                '/vault_api.VaultService/GetProviderCredential',
                request_serializer=vault__api__pb2.GetProviderCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.GetProviderCredentialResponse.FromString,
                _registered_method=True)
        self.GetOauth2VaultCredential = channel.unary_unary(
                '/vault_api.VaultService/GetOauth2VaultCredential',
                request_serializer=vault__api__pb2.GetOauth2VaultCredentialRequest.SerializeToString,
                response_deserializer=vault__api__pb2.GetOauth2VaultCredentialResponse.FromString,
                _registered_method=True)


class VaultServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProviderCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateToolCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProviderCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllOrganizationCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProviderCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauth2VaultCredential(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VaultServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProviderCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProviderCredential,
                    request_deserializer=vault__api__pb2.CreateProviderCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.CreateProviderCredentialResponse.SerializeToString,
            ),
            'CreateToolCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateToolCredential,
                    request_deserializer=vault__api__pb2.CreateToolCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.CreateToolCredentialResponse.SerializeToString,
            ),
            'DeleteProviderCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProviderCredential,
                    request_deserializer=vault__api__pb2.DeleteProviderCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.DeleteProviderCredentialResponse.SerializeToString,
            ),
            'GetAllOrganizationCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllOrganizationCredential,
                    request_deserializer=vault__api__pb2.GetAllOrganizationCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.GetAllOrganizationCredentialResponse.SerializeToString,
            ),
            'GetProviderCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProviderCredential,
                    request_deserializer=vault__api__pb2.GetProviderCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.GetProviderCredentialResponse.SerializeToString,
            ),
            'GetOauth2VaultCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauth2VaultCredential,
                    request_deserializer=vault__api__pb2.GetOauth2VaultCredentialRequest.FromString,
                    response_serializer=vault__api__pb2.GetOauth2VaultCredentialResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vault_api.VaultService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('vault_api.VaultService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VaultService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProviderCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/CreateProviderCredential',
            vault__api__pb2.CreateProviderCredentialRequest.SerializeToString,
            vault__api__pb2.CreateProviderCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateToolCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/CreateToolCredential',
            vault__api__pb2.CreateToolCredentialRequest.SerializeToString,
            vault__api__pb2.CreateToolCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProviderCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/DeleteProviderCredential',
            vault__api__pb2.DeleteProviderCredentialRequest.SerializeToString,
            vault__api__pb2.DeleteProviderCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllOrganizationCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/GetAllOrganizationCredential',
            vault__api__pb2.GetAllOrganizationCredentialRequest.SerializeToString,
            vault__api__pb2.GetAllOrganizationCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProviderCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/GetProviderCredential',
            vault__api__pb2.GetProviderCredentialRequest.SerializeToString,
            vault__api__pb2.GetProviderCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOauth2VaultCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/vault_api.VaultService/GetOauth2VaultCredential',
            vault__api__pb2.GetOauth2VaultCredentialRequest.SerializeToString,
            vault__api__pb2.GetOauth2VaultCredentialResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
